name: 'PR Analyser'

on:
  pull_request:
    branches:
      - master

jobs:
  terraform:
    name: 'Analyse PR Changes with AI'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get PR Diff
        id: pr_diff
        run: |
          PR_DIFF=$(curl -s "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            | jq -r '.[] | .patch' | tr '\n' ' ')
          echo "PR_DIFF=$PR_DIFF" >> $GITHUB_ENV

      - name: Send PR Changes to Ollama API for Analysis
        env:
          COMMENTS_URL: ${{ github.event.pull_request.comments_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_DIFF: ${{ env.PR_DIFF }}
          OLLAMA_MODEL: ${{ vars.OLLAMA_MODEL }}
        run: |
          INSTRUCTION="Analyze the TypeScript code in the GitHub PR for errors, optimizations, and improvements. Respond only with the improved code, ensuring it adheres to best practices, resolves any issues, and includes comments where clarification is necessary. Code:\n\n$PR_DIFF"
          
          REQUEST_BODY=$(jq -n --arg model "$OLLAMA_MODEL" \
                                --arg prompt "$INSTRUCTION" \
                                '{
                                  model: $model,
                                  prompt: $prompt,
                                  options: { temperature: 0.3 },
                                  reset: true,
                                  stream: false
                                }')

          RESPONSE=$(curl -s -w "\n%{http_code}" -X POST \
            -H "Content-Type: application/json" \
            -d "$REQUEST_BODY" \
            https://ai-agent-yz.rpplabs.com/api/generate)

          HTTP_STATUS=$(echo "$RESPONSE" | tail -n1)
          RESPONSE_BODY=$(echo "$RESPONSE" | head -n-1)

          if [ "$HTTP_STATUS" -eq 200 ]; then
            COMMENT_BODY=$(echo "$RESPONSE_BODY" | jq -r '.response' | jq -Rs .)
          else
            COMMENT_BODY="AI agent encountered an issue."
          fi
          
          curl -s -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            -d "{\"body\": $COMMENT_BODY}" \
            $COMMENTS_URL
